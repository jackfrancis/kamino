name: Test vmss-prototype Helm Chart
on:
  pull_request:
    paths:
      - helm/vmss-prototype/Chart.yaml
      - helm/vmss-prototype/values.yaml
      - helm/vmss-prototype/.helmignore
      - helm/vmss-prototype/templates/**
    branches:
      - main
jobs:
  test-vmss-prototype-helm-chart:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
      - name: assign tag automatically based on current commit sha
        run: echo "RELEASE_VERSION=$(git rev-parse --short "$GITHUB_SHA")-canary" >> $GITHUB_ENV
      - name: setup buildx
        uses: docker/setup-buildx-action@v1
      - name: login to GitHub container registry
        uses: docker/login-action@v1
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.CR_PAT }}
      - name: build and push
        uses: docker/build-push-action@v2
        with:
          push: true
          file: vmss-prototype/Dockerfile
          tags: |
            ghcr.io/jackfrancis/kamino/vmss-prototype:${{ env.RELEASE_VERSION }}
      - name: install go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.15'
      - name: install ginkgo
        run: go get -u github.com/onsi/ginkgo/ginkgo
      - name: install helm
        run: |
          curl https://baltocdn.com/helm/signing.asc | sudo apt-key add -
          sudo apt-get install apt-transport-https --yes
          echo "deb https://baltocdn.com/helm/stable/debian/ all main" | sudo tee /etc/apt/sources.list.d/helm-stable-debian.list
          sudo apt-get update
          sudo apt-get install helm
      - name: install k
        run: |
          sudo curl -o /usr/local/bin/k https://raw.githubusercontent.com/jakepearson/k/master/k
          sudo chmod +x /usr/local/bin/k
      - name: checkout aks-engine
        uses: actions/checkout@v2
        with:
          repository: Azure/aks-engine
          path: aks-engine
          ref: master # TODO change to a strongly-versioned ref once the kamino E2E integrations are in a released version
      - name: build aks-engine binary
        run: make build-binary
        working-directory: aks-engine
      - name: run aks-engine E2E
        env:
          ORCHESTRATOR_RELEASE: "1.19"
          CLUSTER_DEFINITION: "examples/kubernetes.json"
          SUBSCRIPTION_ID: ${{ secrets.TEST_AZURE_SUB_ID }}
          CLIENT_ID: ${{ secrets.TEST_AZURE_SP_ID }}
          CLIENT_SECRET: ${{ secrets.TEST_AZURE_SP_PW }}
          LOCATION: "westus2"
          TENANT_ID: ${{ secrets.TEST_AZURE_TENANT_ID }}
          SKIP_LOGS_COLLECTION: true
          CLEANUP_ON_EXIT: true
          CLEANUP_IF_FAIL: false
          GINKGO_FOCUS: "should be able to install vmss node prototype"
          RUN_VMSS_NODE_PROTOTYPE: true
          KAMINO_VMSS_PROTOTYPE_LOCAL_CHART_PATH: ${{ github.workspace }}/helm/vmss-prototype
        run: make test-kubernetes
        working-directory: aks-engine
